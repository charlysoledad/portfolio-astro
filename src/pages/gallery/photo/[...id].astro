---
import type { ImageMetadata } from "astro";
import "../../../css/transitions.css";
import Container from "../../../layouts/Container.astro";
import Content from "../../../layouts/Content.astro";
import { Image } from "astro:assets";

export const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/gallery/*.{jpeg,jpg,png,gif}",
);

export const getStaticPaths = async () => {
  const imgKeys = Object.keys(images);
  const imgsIds = imgKeys.map((key) =>
    key.replace("/src/assets/gallery/", "").replace(".jpg", ""),
  );

  return imgsIds.map((id) => ({ params: { id: id } }));
};

const { id } = Astro.params;

const path = `/src/assets/gallery/${id}.jpg`;
if (!images[path]) throw new Error("No images loaded");

// const photo = gallerySection.find((photo) => photo.id == id);
// const photoIndex = gallerySection.findIndex((photo) => photo.id == id);
// const photoNumber = photo?.id.toString().padStart(2, "0");

const prevPhoto = `/src/assets/gallery/${parseInt(id) - 1}.jpg`;
// if (!images[prevPhoto]) throw new Error("No prev loaded");
const nextPhoto = `/src/assets/gallery/${parseInt(id) + 1}.jpg`;
// if (!images[nextPhoto]) throw new Error("No next loaded");
export const prerender = true;
---

<Container title="Gallery" navbarFixed={true}>
  <main class="relative mx-auto w-full h-full">
    <Content>
      <div class="flex flex-col gap-y-8 items-center justify-center">
        <Image
          decoding="async"
          src={images[path]()}
          alt=""
          class="max-w-[920px] max-h-[540px] w-3/5"
          transition:name={`photo-${id}`}
        />

        <!-- <img
          decoding="async"
          src={import(images[imagePath])}
          alt={photo?.alt}
          
        /> -->
        <div class="flex flex-row gap-x-3 items-center justify-center">
          {
            images[prevPhoto] && (
              <a
                href={`/gallery/photo/${parseInt(id) - 1}`}
                class="w-1/6 h-20 flex overflow-clip rounded-lg transition-all duration-1000 items-center justify-center"
              >
                <Image
                  class="place-self-center hover:scale-150 transition-all duration-500"
                  src={images[prevPhoto]()}
                  alt=""
                  loading={
                    parseInt(id) - 1 && parseInt(id) - 1 > 8 ? "lazy" : "eager"
                  }
                  fetchpriority={
                    parseInt(id) - 1 && parseInt(id) - 1 <= 4 ? "high" : "auto"
                  }
                />
              </a>
            )
          }
          {
            images[nextPhoto] && (
              <a
                href={`/gallery/photo/${parseInt(id) + 1}`}
                class="w-1/6 h-20 flex overflow-clip rounded-lg transition-all duration-1000 items-center justify-center"
              >
                <Image
                  class="place-self-center hover:scale-150 transition-all duration-500"
                  src={images[nextPhoto]()}
                  alt={""}
                  loading={
                    parseInt(id) + 1 && parseInt(id) + 1 > 8 ? "lazy" : "eager"
                  }
                  fetchpriority={
                    parseInt(id) + 1 && parseInt(id) + 1 <= 4 ? "high" : "auto"
                  }
                />
              </a>
            )
          }
        </div>
      </div>
    </Content>
  </main>
  <script src="../../../scripts/transitions.ts"></script>
</Container>
